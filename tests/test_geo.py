import numpy as np
from unittest.mock import patch, MagicMock

def test_compare_geolocation():
    import fcitools.geo
    sc = MagicMock()
    sc["vis_09"].area.x_size = 5
    sc["vis_09"].area.y_size = 5
    sc["vis_09"].area.resolution = (1000, 1000)
    sc["vis_09"].area.get_lonlats.return_value = (
        np.array([
            [-5.1331, -5.1240, -5.1149, -5.1058, -5.0968],
            [-5.1330, -5.1239, -5.1148, -5.1058, -5.0967],
            [-5.1329, -5.1238, -5.1148, -5.1057, -5.0966],
            [-5.1328, -5.1238, -5.1147, -5.1056, -5.0965],
            [-5.1328, -5.1237, -5.1146, -5.1055, -5.0964]]),
        np.array([
            [-5.1475, -5.1475, -5.1475, -5.1475, -5.1475],
            [-5.1384, -5.1384, -5.1384, -5.1384, -5.1384],
            [-5.1293, -5.1293, -5.1293, -5.1293, -5.1293],
            [-5.1202, -5.1202, -5.1202, -5.1202, -5.1201],
            [-5.1111, -5.1111, -5.1111, -5.1111, -5.1110]]))

    rgb = fcitools.geo.compare_geolocation(sc, "vis_09",
            _x_start=5001, _x_end=5006,
            _y_start=5001, _y_end=5006)

    # NB: I don't know if this is an accurate reference, but at least this
    # was the result 2019-12-09 :)

    np.testing.assert_allclose(
            rgb,
            np.array([[[-8.69114307e+01,  3.42170987e-01, -6.87895252e+01],
                       [ 1.27875242e-02,  3.26081868e+00,  1.63520776e-04],
                       [ 2.56023057e-02,  6.52858795e+00,  6.55478056e-04],
                       [ 3.84171036e-02,  9.79636141e+00,  1.47587385e-03],
                       [ 5.11616755e-02,  1.30462273e+01,  2.61751704e-03]],
                      [[ 1.28042208e-02,  3.26507630e+00,  1.63948070e-04],
                       [ 2.96397055e-01, -7.52848521e+01, -5.90910861e+01],
                       [ 1.28259775e-02,  3.27062427e+00,  1.64505700e-04],
                       [ 2.55707433e-02,  6.52053955e+00,  6.53862914e-04],
                       [ 3.83855099e-02,  9.78830504e+00,  1.47344737e-03]],
                      [[ 2.55805785e-02,  6.52304753e+00,  6.54365999e-04],
                       [ 1.27655621e-02,  3.25521833e+00,  1.62959575e-04],
                       [-1.59620411e+02, -1.09906075e+02,  6.28426814e-01],
                       [ 1.27948495e-02,  3.26268661e+00,  1.63708173e-04],
                       [ 2.56095111e-02,  6.53042534e+00,  6.55847060e-04]],
                      [[ 3.83568622e-02,  9.78099987e+00,  1.47124888e-03],
                       [ 2.56122890e-02,  6.53113371e+00,  6.55989350e-04],
                       [ 1.27974398e-02,  3.26334715e+00,  1.63774466e-04],
                       [ 5.97908922e-01, -1.51868866e+02, -9.00280261e+01],
                       [ 1.27622690e-02,  3.25437860e+00,  1.62875510e-04]],
                      [[ 5.12034834e-02,  1.30568883e+01,  2.62179671e-03],
                       [ 3.83882748e-02,  9.78901007e+00,  1.47365964e-03],
                       [ 2.55731436e-02,  6.52115162e+00,  6.53985674e-04],
                       [ 1.27582136e-02,  3.25334446e+00,  1.62772014e-04],
                       [-5.56895234e+01,  2.19250092e-01, -1.15331809e+01]]]))

